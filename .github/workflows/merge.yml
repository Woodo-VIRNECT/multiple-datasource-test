name: Merge

on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write
  security-events: write

jobs:
  test-and-analyze:
    name: Test and Analyze
    runs-on: ubuntu-22.04
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -XX:MaxMetaspaceSize=512m' -Dorg.gradle.parallel=true"
    steps:
      - name: CHECKOUT
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Set executable permission for Gradle Wrapper
        run: chmod +x ./gradlew
        working-directory: ./

      - name: Validate Gradle Wrapper version
        run: ./gradlew --version
        working-directory: ./

#      - name: Clear old caches (only on specific branches)
#        if: startsWith(github.ref_name, 'main') || startsWith(github.ref_name, 'master')
#        run: |
#          sudo rm -rf ~/.gradle/caches
#          sudo rm -rf ~/.gradle/wrapper
#          sudo rm -rf .qodana/cache
#
#      - name: Restore Gradle Cache
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradlew') }}-${{ github.run_id }}

      - name: Run tests and Jacoco
        run: ./gradlew test jacocoTestReport
        working-directory: ./

#      - name: Archive coverage data
#        uses: actions/upload-artifact@v4
#        with:
#          name: gradle-coverage-data-jacoco
#          path: .qodana/code-coverage

#      - name: Restore Qodana Cache
#        uses: actions/cache@v4
#        with:
#          path: .qodana/cache
#          key: qodana-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradlew') }}-${{ github.run_id }}

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: false
          cache-dir: .qodana/cache
          results-dir: .qodana/results

      - name: Upload Qodana SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: .qodana/results/qodana.sarif.json

  deploy:
    name: Deploy
    needs: [test-and-analyze]
    runs-on: ubuntu-22.04
    steps:
      - run: |
          echo "Deploying to production..."
          echo "Deployed!"
