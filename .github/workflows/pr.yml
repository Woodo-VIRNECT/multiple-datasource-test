name: Pull request

on:
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  test-and-analyze:
    name: Test and Analyze
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      checks: write
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -XX:MaxMetaspaceSize=512m' -Dorg.gradle.parallel=true"
    steps:
      - name: CHECKOUT
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name : Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Validate Gradle Wrapper
        run: chmod +x ./gradlew --version
        working-directory: ./

      - name: Create code coverage folder if not exists
        run: |
          mkdir -p .qodana/code-coverage
        working-directory: ./

      - name: permission
        run: chmod +x gradlew
        working-directory: ./

#      - name: Cache Gradle Wrapper
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle/wrapper/
#          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-wrapper-

      - name : Run tests and Jacoco
        run: |
          ./gradlew test jacocoTestReport
        working-directory: ./

#      - name : Run Sonar From NO-ACT Environment
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          ./gradlew sonar

      - name: Archive coverage data
        uses: actions/upload-artifact@v3
        with:
          name: gradle-coverage-data-jacoco
          path: .qodana/code-coverage
          
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: --save-report=./qodana.yaml


